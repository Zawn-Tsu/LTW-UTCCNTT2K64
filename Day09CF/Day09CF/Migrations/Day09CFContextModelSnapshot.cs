// <auto-generated />
using Day09CF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day09CF.Migrations
{
    [DbContext(typeof(Day09CFContext))]
    partial class Day09CFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day09CF.Models.nvtLoai_SanPham", b =>
                {
                    b.Property<long>("nvtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("nvtId"));

                    b.Property<string>("nvtMaLoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nvtTenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("nvtTrangThai")
                        .HasColumnType("bit");

                    b.HasKey("nvtId");

                    b.HasIndex("nvtMaLoai")
                        .IsUnique();

                    b.ToTable("nvtLoai_SanPham");
                });

            modelBuilder.Entity("Day09CF.Models.nvtSan_Pham", b =>
                {
                    b.Property<long>("nvtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("nvtId"));

                    b.Property<decimal>("nvtDonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nvtHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("nvtLoaiSanPhamId")
                        .HasColumnType("bigint");

                    b.Property<long>("nvtLoai_SanPhamnvtId")
                        .HasColumnType("bigint");

                    b.Property<string>("nvtMaSanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("nvtSoLuong")
                        .HasColumnType("int");

                    b.Property<string>("nvtTenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("nvtId");

                    b.HasIndex("nvtLoai_SanPhamnvtId");

                    b.ToTable("nvtSan_Pham");
                });

            modelBuilder.Entity("Day09CF.Models.nvtSan_Pham", b =>
                {
                    b.HasOne("Day09CF.Models.nvtLoai_SanPham", "nvtLoai_SanPham")
                        .WithMany("nvtSan_Phams")
                        .HasForeignKey("nvtLoai_SanPhamnvtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nvtLoai_SanPham");
                });

            modelBuilder.Entity("Day09CF.Models.nvtLoai_SanPham", b =>
                {
                    b.Navigation("nvtSan_Phams");
                });
#pragma warning restore 612, 618
        }
    }
}
